@using UI_Layer.Dtos.DepartmentDto
@model List<ResultDepartmentDto>
@{
    ViewData["Title"] = "DepartmentList";
    Layout = "~/Views/AdminLayout/AdminLayout.cshtml";
}
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@if ((await AuthorizationService.AuthorizeAsync(User, "AdminPolicy")).Succeeded)
{
    <html>
<div class="container-fluid mt-4">
    <h3>Departmanlar</h3>
    <table class="table table-bordered">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Departman Adı</th>
                <th scope="col">Durum</th>
                <th scope="col">İşlemler</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <th scope="row">@item.DepartmentID</th>
                    <td>@item.Name</td>
                    <td>@(item.Status ? "Aktif" : "Kapatıldı")</td>
                    <td>
                      <a asp-action="DepartmentDetails" asp-controller="Department" asp-route-id="@item.DepartmentID" class="btn btn-primary">Detay</a>
                   @*    <form asp-action="CloseDepartment" asp-controller="Department" onsubmit="return confirm('Departmanı kapatmak istiyor musunuz?');">
                                <input type="hidden" name="id" value="@item.DepartmentID" />
                                <button type="submit" class="btn btn-danger">Departmanı Kapat</button>
                      </form> *@
                    </td>
                </tr>
            }

        </tbody>
    </table>
    <br>
    <div class="mt-4">
        <a class="btn btn-success" asp-controller="Department" asp-action="AddDepartment">Yeni Departman Aç</a>
    </div>
</div>
</html>
}
else
{
    <p>You do not have access to the admin page.</p>
}





