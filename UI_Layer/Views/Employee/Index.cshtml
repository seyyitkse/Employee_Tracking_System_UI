@using UI_Layer.Dtos.EmployeeDto
@model List<ResultEmployeeDto>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/AdminLayout/AdminLayout.cshtml";
}

<!DOCTYPE html>
<html>
<head>
    <title>@ViewData["Title"]</title>
</head>
<body>
    <div class="container-fluid mt-4">
        <h3>Çalışanlar</h3>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Ad-Soyad</th>
                    <th scope="col">E-posta</th>
                    <th scope="col">İşlemler</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <th scope="row">@item.Id</th>
                        <td>@item.Name @item.Surname</td>
                        <td>@item.Mail</td>
-                        <td>
                            <a asp-action="EmployeeDetails" asp-controller="Employee" asp-route-id="@item.Id" class="btn btn-primary">Detay</a>
                            <a asp-action="EmployeeSchedule" asp-controller="Employee" asp-route-id="@item.Id" class="btn btn-outline-danger">Çalışan Mesai</a>
                            <a asp-action="Index"  asp-controller="EmployeeImage" asp-route-id="@item.Id" class="btn btn-info">Resim Ekle</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <br />
        <div class="mt-4">
            <a class="btn btn-success" asp-controller="Employee" asp-action="Register">Yeni Çalışan Oluştur</a>
        </div>
    </div>

    @section Scripts
    {
        <script>
            // Resim ekleme butonuna tıklanınca çalışanın ID'sini resim ekleme sayfasına gönder
            document.querySelectorAll('.btn-info').forEach(function (btn) {
                btn.addEventListener('click', function () {
                    var userId = this.getAttribute('data-user-id');
                    window.location.href = "/EmployeeImage/Index?id=" + userId;
                });
            });
        </script>
        @* <script>
            document.addEventListener('DOMContentLoaded', function () {
                const employeeScheduleButton = document.getElementById('employeeScheduleButton');
                const calendarContainer = document.getElementById('calendar-container');

                employeeScheduleButton.addEventListener('click', function (event) {
                    event.preventDefault();
                    const url = employeeScheduleButton.getAttribute('href');
                    fetch(url)
                        .then(response => response.json())
                        .then(data => {
                            renderCalendar(data); // Verileri takvim bileşenine aktar
                        })
                        .catch(error => {
                            console.error('Error:', error);
                        });
                });

                function renderCalendar(scheduleData) {
                    // Takvim bileşeni için HTML oluştur
                    const calendarHTML = `
                  <div class="calendar">
                    <!-- Takvim içeriği buraya gelecek -->
                  </div>
                `;
                    calendarContainer.innerHTML = calendarHTML;

                    // Takvim içeriği oluşturulacak
                    const calendar = document.querySelector('.calendar');
                    // scheduleData'daki mesai bilgilerini kullanarak takvim içeriğini oluştur
                    // Örneğin, scheduleData'daki her bir mesai girdisi için takvimde bir etkinlik oluşturabilirsiniz
                }
            });

        </script> *@
    }
</body>
</html>
